{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ulticore/reactjs/switch/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nfunction checkStatus() {\n  console.log('check status start...');\n  return fetch('http://192.168.1.184:80/auth?key=sawicki', {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.json()).then(respJSON => {\n    console.log('authenticate token: ', respJSON);\n    return respJSON;\n  }).catch(err => {\n    console.log('error auth: ', err);\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refreshAnimationFree = true;\n    this.state = {\n      buttonText: 'OFF',\n      sliderCurrValue: 10,\n      connectionStatus: 'Connecting',\n      buttonColor: 'gray',\n      disabled: true\n    };\n    this.handleSlider = this.handleSlider.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.sendSliderReq = this.sendSliderReq.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('connecting...');\n    checkStatus();\n  }\n\n  handleButton() {\n    if (this.state.buttonText === 'OFF') {\n      this.setState({\n        buttonText: 'ON',\n        buttonColor: '#0bb164'\n      });\n    } else {\n      this.setState({\n        buttonText: 'OFF',\n        buttonColor: '#ea1010'\n      });\n    }\n  }\n\n  handleSlider(e, value) {\n    if (this.state.sliderCurrValue != value) {\n      console.log(value);\n      this.setState({\n        sliderCurrValue: value\n      });\n    }\n  }\n\n  sendSliderReq(e, value) {\n    console.log(\"sending request\");\n  }\n\n  tmp() {\n    console.log(\"animation end\");\n    document.querySelector('.refresh').classList.remove('refreshRotate');\n    document.querySelector('.refresh').removeEventListener('animationend', this.tmp);\n  }\n\n  handleRefresh(e) {\n    console.log(\"refresh\");\n    document.querySelector('.refresh').classList.add('refreshRotate');\n    document.querySelector('.refresh').addEventListener('animationend', this.tmp);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh\",\n        onClick: this.handleRefresh,\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleButton,\n        className: \"switchButton\",\n        style: {\n          background: this.state.buttonColor\n        },\n        children: this.state.buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectionStatus\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IOSSlider, {\n        value: this.state.sliderCurrValue,\n        min: 0,\n        max: 30,\n        step: 1,\n        onChange: this.handleSlider,\n        onChangeCommitted: this.sendSliderReq,\n        \"aria-labelledby\": \"continuous-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <div>\n  //       <button></button>\n  //     </div>\n  //   // <div className=\"App\">\n  //   //   <header className=\"App-header\">\n  //   //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //   //     <p>\n  //   //       Edit <code>src/App.js</code> and save to reload.\n  //   //     </p>\n  //   //     <a\n  //   //       className=\"App-link\"\n  //   //       href=\"https://reactjs.org\"\n  //   //       target=\"_blank\"\n  //   //       rel=\"noopener noreferrer\"\n  //   //     >\n  //   //       Learn React\n  //   //     </a>\n  //   //   </header>\n  //   // </div>\n  // );\n\n\n}\n\nexport default App;\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);","map":{"version":3,"sources":["/Users/ulticore/reactjs/switch/src/App.js"],"names":["React","Slider","RefreshIcon","withStyles","makeStyles","checkStatus","console","log","fetch","method","mode","then","response","json","respJSON","catch","err","App","Component","constructor","props","refreshAnimationFree","state","buttonText","sliderCurrValue","connectionStatus","buttonColor","disabled","handleSlider","bind","handleButton","sendSliderReq","handleRefresh","componentDidMount","setState","e","value","tmp","document","querySelector","classList","remove","removeEventListener","add","addEventListener","render","background","iOSBoxShadow","IOSSlider","root","color","height","padding","thumb","width","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","track","rail","opacity","mark","markActive"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nfunction checkStatus(){\n  console.log('check status start...');\n  return fetch('http://192.168.1.184:80/auth?key=sawicki', {method: 'GET', mode:'cors'})\n          .then(response => response.json())\n          .then((respJSON) => {\n            console.log('authenticate token: ', respJSON);\n            return respJSON;\n          }).catch(err => {\n            console.log('error auth: ', err);\n          })\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.refreshAnimationFree = true;\n        this.state = {\n            buttonText: 'OFF',\n            sliderCurrValue: 10,\n            connectionStatus: 'Connecting',\n            buttonColor: 'gray',\n            disabled: true,\n        }\n        this.handleSlider = this.handleSlider.bind(this);\n        this.handleButton = this.handleButton.bind(this);\n        this.sendSliderReq = this.sendSliderReq.bind(this);\n        this.handleRefresh = this.handleRefresh.bind(this);\n    }\n    componentDidMount() {\n        console.log('connecting...');\n        checkStatus();\n    }\n\n    handleButton(){\n        if(this.state.buttonText === 'OFF'){\n            this.setState({\n                buttonText: 'ON',\n                buttonColor: '#0bb164'\n            });\n        } else{\n            this.setState({\n                buttonText: 'OFF',\n                buttonColor: '#ea1010'\n            });\n        }\n    }\n    handleSlider(e, value){\n        if(this.state.sliderCurrValue != value){\n            console.log(value)\n            this.setState({\n            sliderCurrValue: value\n        });\n        }\n    }\n    sendSliderReq(e, value){\n        console.log(\"sending request\");\n    }\n\n    tmp(){\n        console.log(\"animation end\");\n        document.querySelector('.refresh').classList.remove('refreshRotate');\n        document.querySelector('.refresh').removeEventListener('animationend', this.tmp);\n    }\n\n    handleRefresh(e){\n        console.log(\"refresh\");\n        document.querySelector('.refresh').classList.add('refreshRotate');\n        document.querySelector('.refresh').addEventListener('animationend', this.tmp);\n    }\n    render(){\n        return(\n            <div className={\"container\"}>\n                <button\n                    className={\"refresh\"}\n                    onClick={this.handleRefresh}>\n                    <RefreshIcon\n                        fontSize={\"large\"}/>\n                </button>\n                <button\n                    onClick={this.handleButton}\n                    className=\"switchButton\"\n                    style={{background:this.state.buttonColor}}>\n                    {this.state.buttonText}\n                </button>\n                <div className={\"connectionStatus\"}> {/*connection status*/}\n                    <span>{this.state.connectionStatus}</span>\n                </div>\n                <IOSSlider\n                    value={this.state.sliderCurrValue}\n                    min={0}\n                    max={30}\n                    step={1}\n                    onChange={this.handleSlider}\n                    onChangeCommitted={this.sendSliderReq}\n                    aria-labelledby=\"continuous-slider\" />\n\n            </div>\n        );\n    }\n  // return (\n  //     <div>\n  //       <button></button>\n  //     </div>\n  //   // <div className=\"App\">\n  //   //   <header className=\"App-header\">\n  //   //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //   //     <p>\n  //   //       Edit <code>src/App.js</code> and save to reload.\n  //   //     </p>\n  //   //     <a\n  //   //       className=\"App-link\"\n  //   //       href=\"https://reactjs.org\"\n  //   //       target=\"_blank\"\n  //   //       rel=\"noopener noreferrer\"\n  //   //     >\n  //   //       Learn React\n  //   //     </a>\n  //   //   </header>\n  //   // </div>\n  // );\n}\n\nexport default App;\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);"]},"metadata":{},"sourceType":"module"}