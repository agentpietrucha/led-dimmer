{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ulticore/reactjs/switch/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nfunction checkStatus() {\n  console.log('check status start...');\n  return fetch('http://192.168.1.184:80/auth?key=sawickli', {\n    method: 'GET'\n  }).then(response => response).then(resp => {\n    console.log('checkstatus: ', resp.status); // resp.text().then(data => {\n    //   return {\n    //     response: data,\n    //     statusCode: resp.status\n    //   };\n    // })\n\n    return resp;\n  }).catch(err => {\n    console.log('error auth: ', err);\n  }); // return fetch('http://192.168.1.184:80/auth?key=sawicki', {method: 'GET'})\n  //         .then(response => response)\n  //         .then((resp) => {\n  //           console.log('checkstatus: ', resp.text())\n  //           return resp;\n  //         }).catch(err => {\n  //           console.log('error auth: ', err);\n  //         })\n}\n\nfunction switchReq(token, state) {\n  return fetch(`http://192.168.1.184:80/switch/${state}?token=${token}`, {\n    method: 'GET'\n  }).then(response => response.text()).then(resp => {\n    return resp;\n  }).catch(err => {\n    return err; // console.log('error auth: ', err);\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refreshAnimationFree = true;\n    this.token = undefined;\n    this.state = {\n      buttonText: 'OFF',\n      sliderCurrValue: 0,\n      connectionStatus: 'Connecting',\n      connectionStatusColor: 'gray',\n      buttonColor: 'gray',\n      disabled: true\n    };\n    this.handleSlider = this.handleSlider.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.sendSliderReq = this.sendSliderReq.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('connecting...');\n    checkStatus().then(data => {\n      console.log('componentDidMount data: ', data);\n      let statusCode = data.status;\n      data.text().then(dataText => {\n        this.token = dataText.split(':')[0];\n\n        if (statusCode == 200) {\n          this.setState({\n            sliderCurrValue: parseInt(dataText.split(':')[1]),\n            connectionStatus: 'Connected',\n            connectionStatusColor: '#0bb164'\n          });\n        } else {\n          this.setState({\n            connectionStatus: 'Connection failure'\n          });\n        }\n      }); // this.token = data.split(':')[0];\n      // this.setState({\n      //   sliderCurrValue: parseInt(data.split(':')[1]),\n      //   connectionStatus: 'Connected',\n      //   connectionStatusColor: '#0bb164'\n      // })\n    });\n  }\n\n  handleButton() {\n    if (this.state.buttonText === 'OFF') {\n      switchReq(this.token, 'on').then(data => {\n        this.setState({\n          sliderCurrValue: parseInt(data)\n        });\n      });\n      this.setState({\n        buttonText: 'ON',\n        buttonColor: '#0bb164'\n      });\n    } else {\n      switchReq(this.token, 'off');\n      this.setState({\n        buttonText: 'OFF',\n        buttonColor: '#ea1010',\n        sliderCurrValue: 0\n      });\n    }\n  }\n\n  handleSlider(e, value) {\n    if (this.state.sliderCurrValue != value) {\n      console.log(value);\n      this.setState({\n        sliderCurrValue: value\n      });\n    }\n  }\n\n  sendSliderReq(e, value) {\n    console.log(\"sending request\");\n  }\n\n  tmp() {\n    console.log(\"animation end\");\n    document.querySelector('.refresh').classList.remove('refreshRotate');\n    document.querySelector('.refresh').removeEventListener('animationend', this.tmp);\n  }\n\n  handleRefresh(e) {\n    console.log(\"refresh\");\n    console.log('connecting...');\n    checkStatus().then(data => {\n      console.log(data);\n      this.token = data.split(':')[0];\n      this.setState({\n        sliderCurrValue: parseInt(data.split(':')[1]),\n        connectionStatus: 'Connected',\n        connectionStatusColor: '#0bb164'\n      });\n    });\n    document.querySelector('.refresh').classList.add('refreshRotate');\n    document.querySelector('.refresh').addEventListener('animationend', this.tmp);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh\",\n        onClick: this.handleRefresh,\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleButton,\n        className: \"switchButton\",\n        style: {\n          background: this.state.buttonColor\n        },\n        children: this.state.buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectionStatus\",\n        style: {\n          background: this.state.connectionStatusColor\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IOSSlider, {\n        value: this.state.sliderCurrValue,\n        min: 0,\n        max: 30,\n        step: 1,\n        onChange: this.handleSlider,\n        onChangeCommitted: this.sendSliderReq,\n        \"aria-labelledby\": \"continuous-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <div>\n  //       <button></button>\n  //     </div>\n  //   // <div className=\"App\">\n  //   //   <header className=\"App-header\">\n  //   //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //   //     <p>\n  //   //       Edit <code>src/App.js</code> and save to reload.\n  //   //     </p>\n  //   //     <a\n  //   //       className=\"App-link\"\n  //   //       href=\"https://reactjs.org\"\n  //   //       target=\"_blank\"\n  //   //       rel=\"noopener noreferrer\"\n  //   //     >\n  //   //       Learn React\n  //   //     </a>\n  //   //   </header>\n  //   // </div>\n  // );\n\n\n}\n\nexport default App;\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);","map":{"version":3,"sources":["/Users/ulticore/reactjs/switch/src/App.js"],"names":["React","Slider","RefreshIcon","withStyles","makeStyles","checkStatus","console","log","fetch","method","then","response","resp","status","catch","err","switchReq","token","state","text","App","Component","constructor","props","refreshAnimationFree","undefined","buttonText","sliderCurrValue","connectionStatus","connectionStatusColor","buttonColor","disabled","handleSlider","bind","handleButton","sendSliderReq","handleRefresh","componentDidMount","data","statusCode","dataText","split","setState","parseInt","e","value","tmp","document","querySelector","classList","remove","removeEventListener","add","addEventListener","render","background","iOSBoxShadow","IOSSlider","root","color","height","padding","thumb","width","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","track","rail","opacity","mark","markActive"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;;AAEA,SAASC,WAAT,GAAsB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAOC,KAAK,CAAC,2CAAD,EAA8C;AAACC,IAAAA,MAAM,EAAE;AAAT,GAA9C,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QADnB,EAEED,IAFF,CAEQE,IAAD,IAAU;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAAI,CAACC,MAAlC,EADc,CAEd;AACA;AACA;AACA;AACA;AACA;;AACA,WAAOD,IAAP;AACD,GAXF,EAWIE,KAXJ,CAWUC,GAAG,IAAI;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,GAA5B;AACD,GAbF,CAAP,CAFoB,CAgBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAgC;AAC9B,SAAOV,KAAK,CAAE,kCAAiCU,KAAM,UAASD,KAAM,EAAxD,EAA2D;AAAER,IAAAA,MAAM,EAAE;AAAV,GAA3D,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EADnB,EAEET,IAFF,CAEQE,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAJF,EAIIE,KAJJ,CAIUC,GAAG,IAAI;AACd,WAAOA,GAAP,CADc,CAEd;AACD,GAPF,CAAP;AASD;;AACD,MAAMK,GAAN,SAAkBpB,KAAK,CAACqB,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,oBAAL,GAA4B,IAA5B;AACA,SAAKP,KAAL,GAAaQ,SAAb;AACA,SAAKP,KAAL,GAAa;AACTQ,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,eAAe,EAAE,CAFR;AAGTC,MAAAA,gBAAgB,EAAE,YAHT;AAITC,MAAAA,qBAAqB,EAAE,MAJd;AAKTC,MAAAA,WAAW,EAAE,MALJ;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB/B,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,IAAAA,WAAW,GAAGK,IAAd,CAAoB4B,IAAI,IAAI;AAC1BhC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC+B,IAAxC;AACA,UAAIC,UAAU,GAAGD,IAAI,CAACzB,MAAtB;AACAyB,MAAAA,IAAI,CAACnB,IAAL,GAAYT,IAAZ,CAAiB8B,QAAQ,IAAI;AAC3B,aAAKvB,KAAL,GAAauB,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAb;;AACA,YAAGF,UAAU,IAAI,GAAjB,EAAqB;AACnB,eAAKG,QAAL,CAAc;AACZf,YAAAA,eAAe,EAAEgB,QAAQ,CAACH,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CADb;AAEZb,YAAAA,gBAAgB,EAAE,WAFN;AAGZC,YAAAA,qBAAqB,EAAE;AAHX,WAAd;AAKD,SAND,MAMM;AACJ,eAAKa,QAAL,CAAc;AACZd,YAAAA,gBAAgB,EAAE;AADN,WAAd;AAGD;AACF,OAbD,EAH0B,CAiB1B;AACA;AACA;AACA;AACA;AACA;AACD,KAvBD;AAwBH;;AAEDM,EAAAA,YAAY,GAAE;AACV,QAAG,KAAKhB,KAAL,CAAWQ,UAAX,KAA0B,KAA7B,EAAmC;AAC/BV,MAAAA,SAAS,CAAC,KAAKC,KAAN,EAAa,IAAb,CAAT,CAA4BP,IAA5B,CAAiC4B,IAAI,IAAI;AACvC,aAAKI,QAAL,CAAc;AACZf,UAAAA,eAAe,EAAEgB,QAAQ,CAACL,IAAD;AADb,SAAd;AAGD,OAJD;AAKA,WAAKI,QAAL,CAAc;AACVhB,QAAAA,UAAU,EAAE,IADF;AAEVI,QAAAA,WAAW,EAAE;AAFH,OAAd;AAIH,KAVD,MAUM;AACFd,MAAAA,SAAS,CAAC,KAAKC,KAAN,EAAa,KAAb,CAAT;AACA,WAAKyB,QAAL,CAAc;AACVhB,QAAAA,UAAU,EAAE,KADF;AAEVI,QAAAA,WAAW,EAAE,SAFH;AAGVH,QAAAA,eAAe,EAAE;AAHP,OAAd;AAKH;AACJ;;AACDK,EAAAA,YAAY,CAACY,CAAD,EAAIC,KAAJ,EAAU;AAClB,QAAG,KAAK3B,KAAL,CAAWS,eAAX,IAA8BkB,KAAjC,EAAuC;AACnCvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,KAAZ;AACA,WAAKH,QAAL,CAAc;AACdf,QAAAA,eAAe,EAAEkB;AADH,OAAd;AAGH;AACJ;;AACDV,EAAAA,aAAa,CAACS,CAAD,EAAIC,KAAJ,EAAU;AACnBvC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AAEDuC,EAAAA,GAAG,GAAE;AACDxC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAwC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,SAAnC,CAA6CC,MAA7C,CAAoD,eAApD;AACAH,IAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCG,mBAAnC,CAAuD,cAAvD,EAAuE,KAAKL,GAA5E;AACH;;AAEDV,EAAAA,aAAa,CAACQ,CAAD,EAAG;AACZtC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,IAAAA,WAAW,GAAGK,IAAd,CAAoB4B,IAAI,IAAI;AAC1BhC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,IAAZ;AACA,WAAKrB,KAAL,GAAaqB,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAb;AACA,WAAKC,QAAL,CAAc;AACZf,QAAAA,eAAe,EAAEgB,QAAQ,CAACL,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CADb;AAEZb,QAAAA,gBAAgB,EAAE,WAFN;AAGZC,QAAAA,qBAAqB,EAAE;AAHX,OAAd;AAKD,KARD;AAUAkB,IAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,SAAnC,CAA6CG,GAA7C,CAAiD,eAAjD;AACAL,IAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCK,gBAAnC,CAAoD,cAApD,EAAoE,KAAKP,GAAzE;AACH;;AACDQ,EAAAA,MAAM,GAAE;AACN,wBACM;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,8BACI;AACI,QAAA,SAAS,EAAE,SADf;AAEI,QAAA,OAAO,EAAE,KAAKlB,aAFlB;AAAA,+BAGI,QAAC,WAAD;AACI,UAAA,QAAQ,EAAE;AADd;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,OAAO,EAAE,KAAKF,YADlB;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAE;AAACqB,UAAAA,UAAU,EAAC,KAAKrC,KAAL,CAAWY;AAAvB,SAHX;AAAA,kBAIK,KAAKZ,KAAL,CAAWQ;AAJhB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AAAK,QAAA,SAAS,EAAE,kBAAhB;AACK,QAAA,KAAK,EAAE;AAAC6B,UAAAA,UAAU,EAAE,KAAKrC,KAAL,CAAWW;AAAxB,SADZ;AAAA,qCAEI;AAAA,oBAAO,KAAKX,KAAL,CAAWU;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBI,QAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWS,eADtB;AAEI,QAAA,GAAG,EAAE,CAFT;AAGI,QAAA,GAAG,EAAE,EAHT;AAII,QAAA,IAAI,EAAE,CAJV;AAKI,QAAA,QAAQ,EAAE,KAAKK,YALnB;AAMI,QAAA,iBAAiB,EAAE,KAAKG,aAN5B;AAOI,2BAAgB;AAPpB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADN;AA6BD,GAnI6B,CAoIhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxJgC;;AA2JlC,eAAef,GAAf;AACA,MAAMoC,YAAY,GAAG,iFAArB;AACA,MAAMC,SAAS,GAAGtD,UAAU,CAAC;AAC3BuD,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,OAAO,EAAE;AAHL,GADqB;AAM3BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE,EADH;AAELG,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,eAAe,EAAE,MAHZ;AAILC,IAAAA,SAAS,EAAET,YAJN;AAKLU,IAAAA,SAAS,EAAE,CAAC,EALP;AAMLC,IAAAA,UAAU,EAAE,CAAC,EANR;AAOL,kCAA8B;AAC5BF,MAAAA,SAAS,EAAE,gFADiB;AAE5B;AACA,8BAAwB;AACtBA,QAAAA,SAAS,EAAET;AADW;AAHI;AAPzB,GANoB;AAqB3BY,EAAAA,MAAM,EAAE,EArBmB;AAsB3BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,mBADI;AAEVC,IAAAA,GAAG,EAAE,CAAC,EAFI;AAGV,WAAO;AACLhB,MAAAA,UAAU,EAAE,aADP;AAELI,MAAAA,KAAK,EAAE;AAFF;AAHG,GAtBe;AA8B3Ba,EAAAA,KAAK,EAAE;AACLZ,IAAAA,MAAM,EAAE;AADH,GA9BoB;AAiC3Ba,EAAAA,IAAI,EAAE;AACJb,IAAAA,MAAM,EAAE,CADJ;AAEJc,IAAAA,OAAO,EAAE,GAFL;AAGJV,IAAAA,eAAe,EAAE;AAHb,GAjCqB;AAsC3BW,EAAAA,IAAI,EAAE;AACJX,IAAAA,eAAe,EAAE,SADb;AAEJJ,IAAAA,MAAM,EAAE,CAFJ;AAGJG,IAAAA,KAAK,EAAE,CAHH;AAIJG,IAAAA,SAAS,EAAE,CAAC;AAJR,GAtCqB;AA4C3BU,EAAAA,UAAU,EAAE;AACVF,IAAAA,OAAO,EAAE,CADC;AAEVV,IAAAA,eAAe,EAAE;AAFP;AA5Ce,CAAD,CAAV,CAgDf/D,MAhDe,CAAlB","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nfunction checkStatus(){\n  console.log('check status start...');\n  return fetch('http://192.168.1.184:80/auth?key=sawickli', {method: 'GET'})\n          .then(response => response)\n          .then((resp) => {\n            console.log('checkstatus: ', resp.status)\n            // resp.text().then(data => {\n            //   return {\n            //     response: data,\n            //     statusCode: resp.status\n            //   };\n            // })\n            return resp;\n          }).catch(err => {\n            console.log('error auth: ', err);\n          })\n  // return fetch('http://192.168.1.184:80/auth?key=sawicki', {method: 'GET'})\n  //         .then(response => response)\n  //         .then((resp) => {\n  //           console.log('checkstatus: ', resp.text())\n  //           return resp;\n  //         }).catch(err => {\n  //           console.log('error auth: ', err);\n  //         })\n}\n\nfunction switchReq(token, state){\n  return fetch(`http://192.168.1.184:80/switch/${state}?token=${token}`, { method: 'GET' })\n          .then(response => response.text())\n          .then((resp) => {\n            return resp;\n          }).catch(err => {\n            return err;\n            // console.log('error auth: ', err);\n          })\n\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.refreshAnimationFree = true;\n        this.token = undefined;\n        this.state = {\n            buttonText: 'OFF',\n            sliderCurrValue: 0,\n            connectionStatus: 'Connecting',\n            connectionStatusColor: 'gray',\n            buttonColor: 'gray',\n            disabled: true,\n        }\n        this.handleSlider = this.handleSlider.bind(this);\n        this.handleButton = this.handleButton.bind(this);\n        this.sendSliderReq = this.sendSliderReq.bind(this);\n        this.handleRefresh = this.handleRefresh.bind(this);\n    }\n    componentDidMount() {\n        console.log('connecting...');\n        checkStatus().then( data => {\n          console.log('componentDidMount data: ', data);\n          let statusCode = data.status;\n          data.text().then(dataText => {\n            this.token = dataText.split(':')[0];\n            if(statusCode == 200){\n              this.setState({\n                sliderCurrValue: parseInt(dataText.split(':')[1]),\n                connectionStatus: 'Connected',\n                connectionStatusColor: '#0bb164'\n              });\n            } else{\n              this.setState({\n                connectionStatus: 'Connection failure'\n              });\n            }\n          })\n          // this.token = data.split(':')[0];\n          // this.setState({\n          //   sliderCurrValue: parseInt(data.split(':')[1]),\n          //   connectionStatus: 'Connected',\n          //   connectionStatusColor: '#0bb164'\n          // })\n        })\n    }\n\n    handleButton(){\n        if(this.state.buttonText === 'OFF'){\n            switchReq(this.token, 'on').then(data => {\n              this.setState({\n                sliderCurrValue: parseInt(data)\n              });\n            });\n            this.setState({\n                buttonText: 'ON',\n                buttonColor: '#0bb164'\n            });\n        } else{\n            switchReq(this.token, 'off');\n            this.setState({\n                buttonText: 'OFF',\n                buttonColor: '#ea1010',\n                sliderCurrValue: 0\n            });\n        }\n    }\n    handleSlider(e, value){\n        if(this.state.sliderCurrValue != value){\n            console.log(value)\n            this.setState({\n            sliderCurrValue: value\n        });\n        }\n    }\n    sendSliderReq(e, value){\n        console.log(\"sending request\");\n    }\n\n    tmp(){\n        console.log(\"animation end\");\n        document.querySelector('.refresh').classList.remove('refreshRotate');\n        document.querySelector('.refresh').removeEventListener('animationend', this.tmp);\n    }\n\n    handleRefresh(e){\n        console.log(\"refresh\");\n\n        console.log('connecting...');\n        checkStatus().then( data => {\n          console.log(data);\n          this.token = data.split(':')[0];\n          this.setState({\n            sliderCurrValue: parseInt(data.split(':')[1]),\n            connectionStatus: 'Connected',\n            connectionStatusColor: '#0bb164'\n          })\n        })\n\n        document.querySelector('.refresh').classList.add('refreshRotate');\n        document.querySelector('.refresh').addEventListener('animationend', this.tmp);\n    }\n    render(){\n      return(\n            <div className={\"container\"}>\n                <button\n                    className={\"refresh\"}\n                    onClick={this.handleRefresh}>\n                    <RefreshIcon\n                        fontSize={\"large\"}/>\n                </button>\n                <button\n                    onClick={this.handleButton}\n                    className=\"switchButton\"\n                    style={{background:this.state.buttonColor}}>\n                    {this.state.buttonText}\n                </button>\n                <div className={\"connectionStatus\"}\n                     style={{background: this.state.connectionStatusColor}}> {/*connection status*/}\n                    <span>{this.state.connectionStatus}</span>\n                </div>\n                <IOSSlider\n                    value={this.state.sliderCurrValue}\n                    min={0}\n                    max={30}\n                    step={1}\n                    onChange={this.handleSlider}\n                    onChangeCommitted={this.sendSliderReq}\n                    aria-labelledby=\"continuous-slider\" />\n\n            </div>\n        );\n    }\n  // return (\n  //     <div>\n  //       <button></button>\n  //     </div>\n  //   // <div className=\"App\">\n  //   //   <header className=\"App-header\">\n  //   //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //   //     <p>\n  //   //       Edit <code>src/App.js</code> and save to reload.\n  //   //     </p>\n  //   //     <a\n  //   //       className=\"App-link\"\n  //   //       href=\"https://reactjs.org\"\n  //   //       target=\"_blank\"\n  //   //       rel=\"noopener noreferrer\"\n  //   //     >\n  //   //       Learn React\n  //   //     </a>\n  //   //   </header>\n  //   // </div>\n  // );\n}\n\nexport default App;\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);"]},"metadata":{},"sourceType":"module"}